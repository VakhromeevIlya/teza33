
//------------------------------------------------------------------------------

Документация: 

//------------------------------------------------------------------------------

Команды терминала

Установка:
npm i

Запуск режима разработчика (c запуском сервера) это то что вам нужно в 90% случаев
npm run dev

Запуск сборки проекта (без запуска сервера, только финальная сборка)
npm run build

Запуск сборки проекта и выгрузка результата на сервер по FTP. (без запуска локальконо сервера)
Конфигурация FTP находится в файле config/gulp-settings.js
npm run deploy

Запуск сборки проекта и создание zip архива с именем проекта. (без запуска локальконо сервера)
npm run zip

Запуск сборки проекта но без создания webp картинок. (без запуска сервера, только финальная сборка)
npm run devbuild

Запуск создания SVG спрайта, иконки нужно положить в папку src/svgicons,
готовый спрайт появится в папке dist/img/icons/icons.svg
(не входит в работу по умолчанию, при необходимости запустить командой)
npm run sprite

//------------------------------------------------------------------------------

Основные файлы для работы с шаблоном:
js/app.js
scss/style.scss

index.html - разводящая страница (содержание)
home.html - главная страница
файлы html/*.htm - подключаемые части

//------------------------------------------------------------------------------

Используются псевдонимы пути к папкам:
@img = src/img
@scss = src/scss
@js = src/js

Плагин для VS Code - Path Autocomplete
Настройки. Нажать в реждакторе F1, найти настройки Settings JSON, добавить код:
"path-autocomplete.pathMappings": {
	"@img": "${folder}/src/img", // псевдоним для папки img
	"@scss": "${folder}/src/scss", // псевдоним для папки scss
	"@js": "${folder}/src/js", //  псевдоним для папки js
}

//------------------------------------------------------------------------------

При возникновении ошибок убедитесь что:
1) У вас установлен Node.js последней версии
2) Терминал открыт с правами администратора
3) В названиях папок на всем пути к проекту нет символа # или !
4) Папки и файлы должны быть названы латиницей без пробелов
5) Тег img и его содержимое должны быть записаны в одну строку без переносов
6) В атрибуте src должен быть указан путь к существующей картинке

//------------------------------------------------------------------------------

Прочие проблемы и их решения:
//-----------------------------------
Ошибка node-sass.
Решения:
npm rebuild node-sass
и/или
npm install sass gulp-sass --save-dev
//-----------------------------------
Ошибка Pyton
Решени:
npm install --global windows-build-tools
//------------------------------------------------------------------------------

//========================================================================================================================================================
В шаблоне используются относительные единицы измерения REM и EM

пример:
font-size: rem(16); запись rem(16) - это формула
она находится в файле mixin.scss
в скобки вы вписываете значение в пикселях , а формула пересчитывает в rem

в медиазапросах используются EM - это нужно для лучшего адаптива
пример: @media(max-width: em(1100)) {} em() - это тоже формула из миксина
внутрь пишете пиксели и она сама все делает ( по умолчанию вторым параметром используется шрифт 16 размера)
но если вы хотите например чтобы отступ у тайтла уменьшался пропорционально его шрифту то можно сделать следующую запис

.title {
		@include adaptiveValue("font-size",48 , 20,$containerWidth, $minWidth, 1);
		margin-bottom: em(20,48);
		1 параметр это отступ, второй это шрифт в настоящее время
}

в шаблоне вы постоянно будете встречать @include adaptiveValue("font-size",48 , 20,$containerWidth, $minWidth, 1);
подобные записи
Это адаптивное свойство тоже миксин 
1.свойство
2.Начальное значение
3.конечное значение
4.Брейкпоинт на котором начинает действовать свойство
5.Брейкпоинт на котором заканчивает действовать свойство
6.Режим рабты 1 - max-width 2 - min-width